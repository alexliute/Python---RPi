# Import libraries
from numpy import *
from pyqtgraph.Qt import QtGui, QtCore
import pyqtgraph as pg
import serial

# Create object serial port
portName = "COM6"
baudrate = 9600
ser = serial.Serial(portName,baudrate)

### START QtApp #####
app = QtGui.QApplication([])                    #initialize GUI
####################

win = pg.GraphicsWindow(title="Serial Data")    # initialize window
p = win.addPlot(title="Coil Profile")           # plot window
curve = p.plot()                                # create an empty "plot" (a curve to plot)

windowWidth = 500                               # width of the window displaying the curve
Xm = linspace(0, 0, windowWidth)                # place holder array for data
ptr = 0                              # initial x position

# Update the data on the display

def update():
    global curve, ptr, Xm
    Xm[:-1] = Xm[1:]                      # shift data in the temporal mean 1 sample left

    # get serial data + convert to float
    try:
        Xm[-1] = float(str(ser.readline())[2:-5])  # read line (single value) from the serial port
    except ValueError:
        pass

     # Xm[-1] = float(value)              # vector containing the instantaneous values
    ptr += 1                              # update x position for displaying the curve
    curve.setData(Xm)                     # set the curve with this data
    curve.setPos(ptr,0)                   # set x position in the graph to 0
    QtGui.QApplication.processEvents()    # process data

    return ptr

if __name__ == '__main__':

    while ptr < 1000:
        update()
    # else:
    ser.close()
    print("stopped")
    pg.QtGui.QApplication.exec_()

    # while True:
    #     update()
    #
    # print("terminated")
    # pg.QtGui.QApplication.exec_()
